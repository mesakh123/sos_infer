version: '3.1'

services:

  db:
    container_name: postgresql_db
    image: postgres
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks: 
      - app_network
    volumes:
      - ./postgres-data:/var/lib/postgresql/data


  pg_admin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    restart: always
    ports:
      - 5050:80
    depends_on:
      - db
    networks: 
      - app_network


  app1:
    container_name: sos_infer_api_1
    image: sos_infer_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    expose:
      - 9000
    ports:
      - 9000:9000
      - 9999:9999
    restart: always
    depends_on:
      - db
    networks: 
      - app_network
    volumes:
      - ./backend:/backend

  
  app2:
    container_name: sos_infer_api_2
    image: sos_infer_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    expose:
      - 9001
    ports:
      - 9001:9000
      - 10000:9999
    restart: always
    depends_on:
      - db
    networks: 
      - app_network
    volumes:
      - ./backend:/backend


  nginx:
    build: 
      context : ./nginx
      dockerfile: Dockerfile.multi
    ports:
      - 7777:80
    depends_on:
      - app1
      - app2
    networks: 
      - app_network
    restart: always


  pgbackups:
    container_name: Postgre_Backup_Service
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
        - ./postgres-data:/backups
    links:
        - db:db
    depends_on:
        - db
    ports:
      - 8787:8787
    environment:
        - BACKUP_SUFFIX=${DB_EXT}
        - POSTGRES_HOST=db
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #  - POSTGRES_PASSWORD_FILE=/run/secrets/db_password <-- alternative for POSTGRES_PASSWORD (to use with docker secrets)
        - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
        - SCHEDULE=@daily
        - BACKUP_KEEP_DAYS=7
        - BACKUP_KEEP_WEEKS=4
        - BACKUP_KEEP_MONTHS=6
        - HEALTHCHECK_PORT=8787
    networks: 
      - app_network

networks:
  app_network:
    driver: bridge
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#     - 9898:8080
